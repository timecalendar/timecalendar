name: CI build test and deploy

on: push

jobs:
  build:
    name: Build image and run tests
    runs-on: ubuntu-latest
    steps:

    - name: Checkout main
      uses: actions/checkout@v2

    - name: Load Docker Layer Caching
      uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true

    - name: Set target environment
      run: ./ci/set-target-env.sh

    - name: Build container image
      working-directory: ./server
      run: docker build -t ghcr.io/timecalendar/timecalendar:${{ env.DOCKER_TAG }} .

    - name: Start Postgres and Redis
      run: docker-compose --env-file ./ci/.env.test -f server/docker-compose.yml --profile ci up -d postgres redis

    - name: Wait for Postgres and Redis
      run: |
        ./ci/wait.sh -h localhost -p 5433 -t 60
        ./ci/wait.sh -h localhost -p 6370 -t 60

    - name: Run tests
      run: docker run --env-file="./ci/.env.test" -e CI=true --network host ghcr.io/timecalendar/timecalendar:${{ env.DOCKER_TAG }} yarn test

    - name: Log in to GitHub Container Registry
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Push image to GitHub Container Registry
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
      run: docker push ghcr.io/timecalendar/timecalendar:${{ env.DOCKER_TAG }}

  # deploy:
  #   name: Deploy on environment
  #   needs: build
  #   if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
  #   runs-on: ubuntu-latest
  #   steps:

  #   - name: Checkout main
  #     uses: actions/checkout@v2

  #   - name: Set target environment
  #     run: ./ci/set-target-env.sh

  #   - name: Set target environment Helm values
  #     run: echo "${{ secrets[env.K8S_HELM_VALUES_ENV] }}" > ./k8s/environments/$TARGET_ENVIRONMENT/secret-values.yaml

  #   - name: Set Kubernetes context
  #     uses: azure/k8s-set-context@v2
  #     with:
  #       method: kubeconfig
  #       kubeconfig: ${{ secrets[env.K8S_KUBECONFIG_ENV] }}

  #   - name: Deploy
  #     run: ./k8s/deploy.sh
