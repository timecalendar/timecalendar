name: CI build

on: push

jobs:
  build-server:
    name: Build server image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/timecalendar/timecalendar
    steps:

    - name: Checkout main
      uses: actions/checkout@v3

    - name: Set target environment
      run: ./ci/set-target-env.sh

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to image repository
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: ./server
        tags: ${{ env.SERVER_IMAGES_WITH_TAG_TO_PUSH }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        push: true


  build-web:
    name: Build web image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/timecalendar/timecalendar-web
    steps:

    - name: Checkout main
      uses: actions/checkout@v3

    - name: Set target environment
      run: ./ci/set-target-env.sh

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to image repository
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile.web
        tags: ${{ env.WEB_IMAGES_WITH_TAG_TO_PUSH }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        push: true

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: build-server
    steps:

    - name: Checkout main
      uses: actions/checkout@v2

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Start Postgres and Redis
      run: docker-compose --env-file ./ci/.env.test -f server/docker-compose.yml --profile ci up -d postgres redis

    - name: Wait for Postgres and Redis
      run: |
        ./ci/wait.sh -h localhost -p 5433 -t 60
        ./ci/wait.sh -h localhost -p 6370 -t 60

    - name: Run tests
      run: docker run --env-file="./ci/.env.test" -e CI=true --network host ghcr.io/timecalendar/timecalendar:${{ github.sha }} npm run test


  deploy-preprod:
    name: Deploy on preprod
    needs: [build-server, build-web]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:

    - name: Checkout main
      uses: actions/checkout@v2

    - name: Set target environment
      run: ./ci/set-target-env.sh

    - name: Set target environment Helm values
      run: echo "${{ secrets[env.K8S_HELM_VALUES_ENV] }}" > ./k8s/environments/$TARGET_ENVIRONMENT/secret-values.yaml

    - name: Set Kubernetes context
      uses: azure/k8s-set-context@v2
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets[env.K8S_KUBECONFIG_ENV] }}

    - name: Deploy
      run: ./k8s/deploy.sh
